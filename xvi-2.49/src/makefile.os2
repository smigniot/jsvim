# Copyright (c) 1990,1991,1992,1993 Chris and John Downey
#***
#
# @(#)makefile.os2	2.14 (Chris & John Downey) 7/27/93
#
# program name:
#	xvi
# function:
#	Portable version of UNIX "vi" editor, with extensions.
# module name:
#	makefile.os2
# module function:
#	Makefile for OS/2
#
#	This is for Microsoft's make, which is the stupidest make
#	ever.
# history:
#	STEVIE - ST Editor for VI Enthusiasts, Version 3.10
#	Originally by Tim Thompson (twitch!tjt)
#	Extensive modifications by Tony Andrews (onecom!wldrdg!tony)
#	Heavily modified by Chris & John Downey
#***

#
# Name of this file.
#
THISFILE=	makefile.os2

#
# Microsoft C directory for OS/2.
#
MSCOS2=		d:\msc5.1\os2

#
# Microsoft C directory for MS-DOS.
#
MSCMSDOS=	d:\msc5.1\msdos

#
# Directory for PMSDK executables.
#
PMSDKBIN=	d:\pmsdk\bin

CC=		$(MSCOS2)\pbin\cl
MODEL=		-AL
DEBUGFLAG=
INCDIRS=	-I$(MSCMSDOS)\include -I$(MSCOS2)\include
CFLAGS=		-DOS2 $(DEBUGFLAG) $(MODEL) $(INCDIRS)
AS=		c:\bin\masm
ASFLAGS=	-Ml
LD=		$(MSCOS2)\pbin\link
LDFLAGS=	/STACK:45056 /NOE /MAP
MARKEXE=	$(PMSDKBIN)\markexe
EXEFLAG=	WINDOWCOMPAT

MACHSRC=	defmain.c defscr.c os2vio.c
MACHOBJ=	defmain.obj defscr.obj os2vio.obj \
		$(MACHOBJ) i286.obj $(LIB)\setargv.obj
MACHINC=	os2vio.h

GENINC=		ascii.h change.h param.h ptrfunc.h regexp.h regmagic.h xvi.h \
		virtscr.h

GENSRC=		alloc.c altstack.c ascii.c buffers.c \
		cmdline.c cmdmode.c cmdtab.c cursor.c dispmode.c \
		edit.c ex_cmds1.c ex_cmds2.c events.c \
		fileio.c find.c flexbuf.c \
		map.c mark.c misccmds.c mouse.c movement.c \
		normal.c param.c pipe.c preserve.c ptrfunc.c \
		regexp.c screen.c search.c startup.c status.c \
		tags.c targets.c undo.c update.c \
		version.c vi_cmds.c vi_ops.c virtscr.c \
		windows.c yankput.c

GENOBJ=		alloc.obj altstack.obj ascii.obj buffers.obj \
		cmdline.obj cmdmode.obj cmdtab.obj cursor.obj dispmode.obj \
		edit.obj ex_cmds1.obj ex_cmds2.obj events.obj \
		fileio.obj find.obj flexbuf.obj \
		map.obj mark.obj misccmds.obj mouse.obj movement.obj \
		normal.obj param.obj pipe.obj preserve.obj ptrfunc.obj \
		regexp.obj screen.obj search.obj startup.obj status.obj \
		tags.obj targets.obj undo.obj update.obj \
		version.obj vi_cmds.obj vi_ops.obj virtscr.obj \
		windows.obj yankput.obj

defmain.obj:	defmain.c $(INC) param.c
		$(CC) -c $(CFLAGS) defmain.c

defscr.obj:	defscr.c $(INC) param.c
		$(CC) -c $(CFLAGS) defscr.c

alloc.obj:	alloc.c $(INC) param.c
		$(CC) -c $(CFLAGS) alloc.c

altstack.obj:	altstack.c $(INC) param.c
		$(CC) -c $(CFLAGS) altstack.c

ascii.obj:	ascii.c $(INC) param.c
		$(CC) -c $(CFLAGS) ascii.c

buffers.obj:	buffers.c $(INC) param.c
		$(CC) -c $(CFLAGS) buffers.c

cmdline.obj:	cmdline.c $(INC) param.c
		$(CC) -c $(CFLAGS) cmdline.c

cmdmode.obj:	cmdmode.c $(INC) param.c
		$(CC) -c $(CFLAGS) cmdmode.c

cmdtab.obj:	cmdtab.c $(INC) param.c
		$(CC) -c $(CFLAGS) cmdtab.c

cursor.obj:	cursor.c $(INC) param.c
		$(CC) -c $(CFLAGS) cursor.c

dispmode.obj:	dispmode.c $(INC) param.c
		$(CC) -c $(CFLAGS) dispmode.c

edit.obj:	edit.c $(INC) param.c
		$(CC) -c $(CFLAGS) edit.c

ex_cmds1.obj:	ex_cmds1.c $(INC) param.c
		$(CC) -c $(CFLAGS) ex_cmds1.c

ex_cmds2.obj:	ex_cmds2.c $(INC) param.c
		$(CC) -c $(CFLAGS) ex_cmds2.c

events.obj:	events.c $(INC) param.c
		$(CC) -c $(CFLAGS) events.c

fileio.obj:	fileio.c $(INC) param.c
		$(CC) -c $(CFLAGS) fileio.c

find.obj:	find.c $(INC) param.c
		$(CC) -c $(CFLAGS) find.c

flexbuf.obj:	flexbuf.c $(INC) param.c
		$(CC) -c $(CFLAGS) flexbuf.c

map.obj:	map.c $(INC) param.c
		$(CC) -c $(CFLAGS) map.c

mark.obj:	mark.c $(INC) param.c
		$(CC) -c $(CFLAGS) mark.c

misccmds.obj:	misccmds.c $(INC) param.c
		$(CC) -c $(CFLAGS) misccmds.c

mouse.obj:	mouse.c $(INC) param.c
		$(CC) -c $(CFLAGS) mouse.c

movement.obj:	movement.c $(INC) param.c
		$(CC) -c $(CFLAGS) movement.c

normal.obj:	normal.c $(INC) param.c
		$(CC) -c $(CFLAGS) normal.c

param.obj:	param.c $(INC)
		$(CC) -c $(CFLAGS) param.c

pipe.obj:	pipe.c $(INC) param.c
		$(CC) -c $(CFLAGS) pipe.c

preserve.obj:	preserve.c $(INC) param.c
		$(CC) -c $(CFLAGS) preserve.c

ptrfunc.obj:	ptrfunc.c $(INC) param.c
		$(CC) -c $(CFLAGS) ptrfunc.c

regexp.obj:	regexp.c $(INC)
		$(CC) -c $(CFLAGS) -Fo$@ regexp.c

screen.obj:	screen.c $(INC) param.c
		$(CC) -c $(CFLAGS) screen.c

search.obj:	search.c $(INC) param.c
		$(CC) -c $(CFLAGS) search.c

signal.obj:	signal.c $(INC) param.c
		$(CC) -c $(CFLAGS) signal.c

startup.obj:	startup.c $(INC) param.c
		$(CC) -c $(CFLAGS) startup.c

status.obj:	status.c $(INC) param.c
		$(CC) -c $(CFLAGS) status.c

tags.obj:	tags.c $(INC) param.c
		$(CC) -c $(CFLAGS) tags.c

targets.obj:	targets.c $(INC) param.c
		$(CC) -c $(CFLAGS) targets.c

undo.obj:	undo.c $(INC) param.c
		$(CC) -c $(CFLAGS) undo.c

update.obj:	update.c $(INC) param.c
		$(CC) -c $(CFLAGS) update.c

vi_cmds.obj:	vi_cmds.c $(INC) param.c
		$(CC) -c $(CFLAGS) vi_cmds.c

vi_ops.obj:	vi_ops.c $(INC) param.c
		$(CC) -c $(CFLAGS) vi_ops.c

virtscr.obj:	virtscr.c $(INC) param.c
		$(CC) -c $(CFLAGS) virtscr.c

windows.obj:	windows.c $(INC) param.c
		$(CC) -c $(CFLAGS) windows.c

yankput.obj:	yankput.c $(INC) param.c
		$(CC) -c $(CFLAGS) yankput.c

i286.obj:	i286.asm
		$(AS) $(ASFLAGS) i286.asm ;

$(MACHOBJ):	$(MACHSRC) $(INC)
		$(CC) -c $(CFLAGS) $(MACHSRC)

BASENAM=	xvi
LINKFILE=	$(BASENAM).lnk

$(LINKFILE):	$(THISFILE)
		echo defmain + defscr + > $@
		echo alloc + altstack + ascii + buffers + cmdline + >> $@
		echo cmdmode + cmdtab + cursor + dispmode + edit + >> $@
		echo ex_cmds1 + ex_cmds2 + events + fileio + >> $@
		echo find + flexbuf + map + mark + misccmds + mouse + >> $@
		echo movement + normal + param + pipe + preserve + >> $@
		echo ptrfunc + regexp + screen + search + startup + >> $@
		echo status + tags + targets + undo + update + version + >> $@
		echo vi_cmds + vi_ops + virtscr + windows + yankput + >> $@
		echo $(MACHOBJ) + i286 + $(LIB)\setargv >> $@
		echo $(BASENAM).exe $(LDFLAGS) ;  >> $@

$(BASENAM).exe: $(GENOBJ) $(MACHOBJ) $(LINKFILE) version.c
		$(CC) $(CFLAGS) -c version.c
		$(LD) @$(LINKFILE)
		$(MARKEXE) $(EXEFLAG) $@
